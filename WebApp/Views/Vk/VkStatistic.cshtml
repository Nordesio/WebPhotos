@model Dictionary<string, int>

@{
    ViewBag.Title = "Статистика сущностей пользователя";
}

<body>
    <div class="container">
        <h1>Статистика сущностей пользователя</h1>
        <div class="row">
            <div class="col-md-6">
                <!-- Диаграмма для отображения статистики -->
                <canvas id="entityChart" width="400" height="400"></canvas>
            </div>
            <div class="col-md-6">
                <!-- Таблица для отображения статистики -->
                <table class="table">
                    <thead>
                        <tr>
                            <th>Сущность</th>
                            <th>Количество</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var entity in Model)
                        {
                            <tr>
                                <td>@entity.Key</td>
                                <td>@entity.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- Отображаем самую частую сущность и ее самое частое слово -->
                <h4>Самая частая сущность: @ViewBag.mostCommonEntity</h4>
                <h4>Самое частое значение сущности: @ViewBag.mostCommonWords</h4>
            </div>
        </div>
    </div>

    <!-- Подключаем Chart.js и скрипт для отображения диаграммы -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
    <script>
        // Получаем данные статистики с сервера
        const statisticsData = @Html.Raw(Json.Serialize(Model));

        // Отображаем статистику в виде круговой диаграммы с помощью Chart.js
        const ctx = document.getElementById('entityChart').getContext('2d');
        const entityChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(statisticsData),
                datasets: [{
                    label: 'Entity Statistics',
                    data: Object.values(statisticsData),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(153, 102, 255, 0.5)',
                        'rgba(255, 159, 64, 0.5)',
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    </script>
</body>
